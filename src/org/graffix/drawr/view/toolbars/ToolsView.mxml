<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:toolbars="org.graffix.drawr.view.toolbars.*">
	<fx:Script>
		<![CDATA[
			import com.graffix.drawingTool.events.drawing.ToolSelectEvent;
			import org.graffix.drawr.events.SymbolSelectEvent;
			import org.graffix.drawr.managers.DrawMode;
			import org.graffix.drawr.shapes.closed.EllipseShape;
			import org.graffix.drawr.shapes.closed.RectShape;
			import org.graffix.drawr.shapes.complex.EraserShape;
			import org.graffix.drawr.shapes.complex.ImageShape;
			import org.graffix.drawr.shapes.complex.SymbolShape;
			import org.graffix.drawr.shapes.complex.TextShape;
			import org.graffix.drawr.shapes.selection.SelectTool;
			import org.graffix.drawr.shapes.simple.FreehandShape;
			import org.graffix.drawr.shapes.simple.LineShape;
			
			import mx.controls.List;
			
			import spark.events.IndexChangeEvent;
			
			protected function buttonbar1_changeHandler(event:IndexChangeEvent):void
			{
				if(buttonBar.selectedItem.data != SymbolShape.SYMBOL_SHAPE)
				
				{
					symbolsPanelPopup.displayPopUp = false;
					var toolSelectEvent:ToolSelectEvent = new ToolSelectEvent(buttonBar.selectedItem.data);
					dispatchEvent(toolSelectEvent);
				}
			}
			
			public function set drawMode(value:int):void
			{
				if(value == DrawMode.TRANSFROM_MODE)
				{
					buttonBar.selectedIndex = 0;
				}
			}
			
			
			protected function specialsymbolspanel1_symbolSelectHandler(event:SymbolSelectEvent):void
			{
				var toolSelectEvent:ToolSelectEvent = new ToolSelectEvent(buttonBar.selectedItem.data, event.symbol);
				dispatchEvent(toolSelectEvent);
			}
			
		]]>
	</fx:Script>
	<fx:Metadata>
		[Event(name="TOOL_SELECT", type="com.graffix.drawingTool.events.drawing.ToolSelectEvent")]
	</fx:Metadata>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
		
		<s:ButtonBar id="buttonBar"
					 requireSelection="true"
					 skinClass="com.graffix.drawingTool.view.skins.ButtonBarSkin"
					 selectedIndex="0" change="buttonbar1_changeHandler(event)" >
			<s:layout>
				<s:VerticalLayout gap="0"/>
			</s:layout>
			<s:dataProvider>
				<s:ArrayList>
					<!--<fx:Object label="Select" data="{SelectTool.SELECT_TOOL}"/>-->
					<fx:Object label="Select" 
							   data="{SelectTool.TRANSFORM_TOOL}" 
							   icon="@Embed(source='com/graffix/drawingTool/view/assets/select.png')"/>
					<fx:Object label="Line" data = "{LineShape.LINE_SHAPE}"
							   icon="@Embed(source='com/graffix/drawingTool/view/assets/line.png')"/>
					<fx:Object label="Rectangle" data = "{RectShape.RECT_SHAPE}"
							   icon="@Embed(source='com/graffix/drawingTool/view/assets/rectangle.png')"/>
					<fx:Object label="Ellipse" data = "{EllipseShape.ELLIPSE_SHAPE}"
							   icon="@Embed(source='com/graffix/drawingTool/view/assets/circle.png')"/>
					<fx:Object label="Free Draw" data = "{FreehandShape.FREEHAND_SHAPE}"
							   icon="@Embed(source='com/graffix/drawingTool/view/assets/freeform-line.png')"/>
					<fx:Object label="Insert text" data = "{TextShape.TEXT_SHAPE}"
							   icon="@Embed(source='com/graffix/drawingTool/view/assets/text.png')"/>
					<fx:Object label="Insert image" data = "{ImageShape.IMAGE_SHAPE}"
							   icon="@Embed(source='com/graffix/drawingTool/view/assets/image.png')"/>
					
					<fx:Object label="Insert symbol" data = "{SymbolShape.SYMBOL_SHAPE}"
							   icon="@Embed(source='com/graffix/drawingTool/view/assets/special.png')"/>
					
					<fx:Object label="Erase" data = "{EraserShape.ERASER_SHAPE}"
							   icon="@Embed(source='com/graffix/drawingTool/view/assets/eraser.png')"/>
				</s:ArrayList>
			</s:dataProvider>
		</s:ButtonBar>
		<s:PopUpAnchor
			popUpPosition="right"
			displayPopUp="{buttonBar.selectedItem.data == SymbolShape.SYMBOL_SHAPE}"
			id="symbolsPanelPopup"
			width="30" height="30" y="210">
			<toolbars:SpecialSymbolsPanel
				symbolSelect="specialsymbolspanel1_symbolSelectHandler(event)"
				/>
		</s:PopUpAnchor>
</s:Group>
